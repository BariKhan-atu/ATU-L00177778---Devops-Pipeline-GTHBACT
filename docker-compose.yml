# eShop DevOps - Complete Development Stack
# Infrastructure services for local development and Azure DevOps pipelines
# Usage: docker compose -f docker-compose.yml up -d

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eshop-postgres
    environment:
      POSTGRES_DB: eshop
      POSTGRES_USER: eshopuser
      POSTGRES_PASSWORD: eshoppassword
      POSTGRES_MULTIPLE_DATABASES: "identitydb,catalogdb,orderingdb"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eshop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eshopuser -d eshop"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: eshop-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - eshop-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: eshop-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: eshopuser
      RABBITMQ_DEFAULT_PASS: eshoppassword
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - eshop-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  eshop-network:
    driver: bridge
    name: eshop-network
